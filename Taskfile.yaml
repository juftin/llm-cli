# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

vars:
    SOURCE_CODE: llm_term
    DOCKER_ORG: juftin
    DOCKER_REPO: llm-term

tasks:
    sync:
        desc: Install Project Dependencies
        cmds:
            - uv sync --all-extras --frozen
    install:
        desc: Install Project + Dev Dependencies
        cmds:
            - task: pre-commit-install
        deps: [sync]
    default:
        desc: Install Project, List Tasks
        cmds:
            - task --list-all
        deps: [sync]
    test:
        desc: Run Tests
        cmds:
            - uv run --all-extras --frozen -- pytest {{.CLI_ARGS | default "tests"}}
        deps: [sync]
    fmt:
        desc: Run Code Formatters
        cmds:
            - uv run --frozen -- ruff format {{.CLI_ARGS | default .ROOT_DIR}}
        deps: [sync]
    fix:
        desc: Fix Code with Linters and Formatters
        cmds:
            - task: fmt
            - uv run --frozen -- ruff check --fix {{.CLI_ARGS | default .ROOT_DIR}}
        deps: [sync]
    lint:
        desc: Run Code Linters
        cmds:
            - uv run --frozen -- ruff check {{.CLI_ARGS | default .ROOT_DIR}}
        deps: [sync]
    check:
        desc: Run Static Type Checkers
        cmds:
            - |
                uv run --frozen -- \
                mypy \
                  --install-types \
                  --ignore-missing-imports \
                  --non-interactive \
                  {{.CLI_ARGS | default .SOURCE_CODE}}
        deps: [sync]
    docs:
        desc: Serve Documentation with MkDocs
        cmds:
            - uv run --group docs mkdocs {{.CLI_ARGS | default "serve --dev-addr=localhost:8000"}}
        status:
            - test ! -f {{.ROOT_DIR}}/mkdocs.yaml
    build:
        desc: Build the Project Artifacts
        cmds:
            - uv build
            - task: docker
    run:
        desc: Run Command within Project (requires "--")
        cmds:
            - uv run --frozen -- {{.CLI_ARGS}}
        deps: [sync]
    docker:
        desc: Build Docker Image
        cmds:
            - |
                docker build \
                   --tag {{.DOCKER_ORG}}/{{.DOCKER_REPO}}:latest \
                   --tag {{.DOCKER_ORG}}/{{.DOCKER_REPO}}:{{.PACKAGE_VERSION}} \
                   {{.CLI_ARGS}} \
                   {{.ROOT_DIR}}
        status:
            - test ! -f {{.ROOT_DIR}}/{{.DOCKERFILE | default "Dockerfile"}}
        vars:
            PACKAGE_VERSION:
                sh: uv tool run --isolated hatch project metadata version
    version:
        desc: View / Set Project Version
        cmd: uv tool run hatch version {{.CLI_ARGS}}
    pre-commit:
        desc: Run Pre-Commit Hooks
        cmds:
            - uv tool run --isolated pre-commit run
        status:
            - test ! -f {{.ROOT_DIR}}/.pre-commit-config.yaml
        deps: [pre-commit-install]
    ########################
    # INTERNAL TASKS
    ########################
    pre-commit-install:
        desc: Install Pre-Commit Hooks
        internal: true
        cmds:
            - cmd: uv tool run --isolated pre-commit install --install-hooks
              silent: true
        status:
            - test ! -f {{.ROOT_DIR}}/.pre-commit-config.yaml
